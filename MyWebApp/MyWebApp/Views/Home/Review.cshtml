@model List<MyWebApp.Models.Review>
@{
    ViewData["Title"] = "Customer Reviews";
    var reviews = Model ?? new List<MyWebApp.Models.Review>();
}

<div class="container py-5">
    <!-- Hero section -->
    <div class="row mb-5">
        <div class="col-lg-8 mx-auto text-center">
            <h1 class="display-4 fw-bold text-success">Share Your Experience</h1>
            <p class="lead text-muted mb-0">We value your feedback and thoughts about our products and services.</p>
        </div>
    </div>

    <div class="row">
        <!-- Review form card -->
        <div class="col-lg-5 mb-4">
            <div class="card shadow-sm border-0 rounded-3 h-100">
                <div class="card-body p-4">
                    <h2 class="h3 mb-4 card-title fw-bold">Leave a Review</h2>
                    
                    <form method="post" action="/Review/AddReview" class="review-form">
                        <div class="form-group mb-4">
                            <label for="customerName" class="form-label fw-medium"><b>Your Name</b></label>
                            <input type="text" class="form-control form-control-lg bg-light border-0" 
                                   id="customerName" name="customerName" required
                                   placeholder="Enter your name">
                        </div>
                        
                        <!-- Star Rating Input -->
                        <div class="form-group mb-4">
                            <label class="form-label fw-medium d-block"><b> Your Rating </b></label>
                            <div class="star-rating">
                                <input type="radio" id="star5" name="rating" value="5" required />
                                <label for="star5" class="star-label" title="5 stars">★</label>
                                
                                <input type="radio" id="star4" name="rating" value="4" />
                                <label for="star4" class="star-label" title="4 stars">★</label>
                                
                                <input type="radio" id="star3" name="rating" value="3" />
                                <label for="star3" class="star-label" title="3 stars">★</label>
                                
                                <input type="radio" id="star2" name="rating" value="2" />
                                <label for="star2" class="star-label" title="2 stars">★</label>
                                
                                <input type="radio" id="star1" name="rating" value="1" />
                                <label for="star1" class="star-label" title="1 star">★</label>
                            </div>
                            <div class="mt-2 rating-text">Select your rating</div>
                        </div>
                        
                        <div class="form-group mb-4">
                            <label for="reviewText" class="form-label fw-medium"><b>Your Review</b></label>
                            <textarea class="form-control form-control-lg bg-light border-0" 
                                      id="reviewText" name="reviewText" 
                                      rows="5" required
                                      placeholder="Share your thoughts and experience..."></textarea>
                        </div>
                        
                        <button type="submit" class="btn btn-success btn-lg w-100 fw-medium">
                            Submit Review
                        </button>
                    </form>
                </div>
            </div>
        </div>
        
        <!-- Reviews display -->
        <div class="col-lg-7">
            <h2 class="h3 mb-4 fw-bold">What Our Customers Say</h2>
            
            <div id="review-list">
                @if (reviews != null && reviews.Any())
                {
                    <p class="text-muted mb-4">Showing @reviews.Count review(s)</p>
                    @foreach (var review in reviews)
                    {
                        <div class="card review-card border-0 shadow-sm mb-4 animate-in">
                            <div class="card-body p-4">
                                <div class="d-flex align-items-center mb-3">
                                    <div class="avatar bg-success text-white rounded-circle me-3 d-flex align-items-center justify-content-center">
                                        @review.CustomerName.Substring(0, 1).ToUpper()
                                    </div>
                                    <div>
                                        <h5 class="card-title fw-bold mb-0">@review.CustomerName</h5>
                                        <small class="text-muted">@review.Date.ToString("MMMM dd, yyyy")</small>
                                    </div>
                                </div>
                                <div class="review-stars mb-3">
                                    @if (review.Rating.HasValue)
                                    {
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= review.Rating)
                                            {
                                                <i class="bi bi-star-fill text-warning"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-star text-warning"></i>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <i class="bi bi-star-fill text-warning"></i>
                                        <i class="bi bi-star-fill text-warning"></i>
                                        <i class="bi bi-star-fill text-warning"></i>
                                        <i class="bi bi-star-fill text-warning"></i>
                                        <i class="bi bi-star-fill text-warning"></i>
                                    }
                                </div>
                                <p class="card-text review-content">@review.ReviewText</p>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="empty-state text-center p-5 bg-light rounded-3">
                        <div class="mb-4">
                            <i class="bi bi-chat-square-text display-1 text-muted"></i>
                        </div>
                        <h3>No reviews yet</h3>
                        <p class="text-muted mb-4">Be the first to share your experience!</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Add to your _Layout.cshtml head section or here -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

<style>
    /* Custom styles for review page */
    body {
        background-color: #f9fafb;
        color: #333;
    }
    
    .animate-in {
        animation: fadeIn 0.6s ease-in-out;
    }
    
    .avatar {
        width: 48px;
        height: 48px;
        font-size: 1.5rem;
    }
    
    .review-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border-radius: 12px;
    }
    
    .review-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.1) !important;
    }
    
    .review-content {
        line-height: 1.7;
        font-size: 1.05rem;
    }
    
    .form-control {
        padding: 12px 16px;
        border-radius: 8px;
        transition: all 0.3s ease;
    }
    
    .form-control:focus {
        box-shadow: 0 0 0 3px rgba(25, 135, 84, 0.25);
    }
    
    .btn-success {
        padding: 12px 24px;
        border-radius: 8px;
        transition: all 0.3s ease;
        box-shadow: 0 4px 6px rgba(25, 135, 84, 0.1);
    }
    
    .btn-success:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 8px rgba(25, 135, 84, 0.15);
    }
    
    .empty-state {
        border-radius: 12px;
        border: 2px dashed #dee2e6;
    }
    
    .card {
        border-radius: 12px;
    }
    
    .review-stars {
        letter-spacing: 2px;
    }
    
    /* Star Rating Styles */
    .star-rating {
        direction: rtl;
        display: inline-block;
        padding: 0;
    }
    
    .star-rating input {
        display: none;
    }
    
    .star-rating label {
        color: #ddd;
        font-size: 2.5rem;
        padding: 0;
        cursor: pointer;
        display: inline-block;
        margin-right: 5px;
        line-height: 1;
        transition: color 0.3s ease;
    }
    
    .star-rating label:hover,
    .star-rating label:hover ~ label,
    .star-rating input:checked ~ label {
        color: #ffb700;
    }
    
    .rating-text {
        font-size: 0.9rem;
        color: #6c757d;
    }
    
    
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        console.log('Review page loaded');
        const reviewList = document.getElementById('review-list');
        console.log('Review count in DOM:', reviewList.querySelectorAll('.review-card').length);
        
        // Add staggered animation to review cards
        const reviewCards = document.querySelectorAll('.review-card');
        reviewCards.forEach((card, index) => {
            setTimeout(() => {
                card.style.opacity = '1';
                card.style.transform = 'translateY(0)';
            }, 150 * index);
        });
        
        // Update rating text based on selection
        const ratingLabels = {
            1: "Poor - Not recommended",
            2: "Fair - Below expectations",
            3: "Average - Met expectations",
            4: "Good - Above expectations",
            5: "Excellent - Highly recommended"
        };
        
        const ratingInputs = document.querySelectorAll('input[name="rating"]');
        const ratingText = document.querySelector('.rating-text');
        
        ratingInputs.forEach(input => {
            input.addEventListener('change', function() {
                ratingText.textContent = ratingLabels[this.value];
                ratingText.style.fontWeight = 'bold';
                ratingText.style.color = '#212529';
            });
        });
    });
</script>